# -*- coding: utf-8 -*-
"""G_DB_10.2_Jose_Manuel_Gonzalez_Juan_Manuel_Vera_Juan_Pablo_Bedoya.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-eHp4DGYN7NI63T26JJGDCbuyrk7v8kv

# Energy Efficiency

##Análisis de datos faltantes
"""

import pandas as pd
eficiencia_df = pd.read_excel('Energy-Efficiency.xlsx')


columnas = ["Relative_Compactness", "Surface_Area", "Wall_Area", "Roof_Area", "Overall_Height", "Orientation", "Glazing_Area", "Glazing_Area_Distribution", "Heating_Load", "Cooling_Load"]
eficiencia_df.columns = columnas

eficiencia_df

scaled_data

eficiencia_df.drop_duplicates()

eficiencia_df.info()

"""**Analizando cada una de las columnas de el dataframe, observamos que no hay ninguna columna con valores nulos.
Seis de las variables son de tipo flotante mientras que 2 son enteras, y las dos clases son de tipo flotante.**
"""

eficiencia_df.isna().values.any()

"""**También verficamos que no hay valores vacíos en todo el dataset.**"""

eficiencia_df.describe()

Data_Final.to_csv('BD_10_Reg.csv',',')

import numpy as np


print("unicos Glazing Area", np.unique(eficiencia_df["Glazing_Area"]))
print("")
print("unicos Overall Height", np.unique(eficiencia_df["Overall_Height"]))
print("")
print("unicos Relative Compactness", np.unique(eficiencia_df["Relative_Compactness"]))
print("")
print("unicos Surface Area", np.unique(eficiencia_df["Surface_Area"]))
print("")
print("unicos Wall Area", np.unique(eficiencia_df["Wall_Area"]))
print("")
print("unicos Roof Area", np.unique(eficiencia_df["Roof_Area"]))
print("")
print("unicos Heating Load", np.unique(eficiencia_df["Heating_Load"]))
print("")
print("unicos Cooling Load", np.unique(eficiencia_df["Cooling_Load"]))

"""**Con los valores únicos, se puede evidenciar que solo las variables Heating Load y Cooling Load, tienen valores continuos y las demás variables tienen valores discretos a pesar de ser flotantes. De igual manera se realizará un análisis de las variables que cuentan con varios valores únicos, para mirar su comportamiento y si realmente deben ser manejadas como variables categóricas.Para el caso de Glazing Area, Roof Area y Overall Height, se toman como categóricas por su cantidad de valores únicos tan reducida (menor a 5).**

##Eliminación de Atípicos
"""

columnas_continuas = ["Relative_Compactness", "Surface_Area", "Wall_Area"]
variables_continuas = eficiencia_df[columnas_continuas]
variables_continuas

from sklearn.preprocessing import MinMaxScaler
scaler = MinMaxScaler()
scaled_data = scaler.fit_transform(variables_continuas)
scaled_data = pd.DataFrame(scaled_data, columns=[columnas_continuas])
scaled_data

columnas = set(["Relative_Compactness", "Surface_Area", "Wall_Area", "Roof_Area", "Overall_Height", "Orientation", "Glazing_Area", "Glazing_Area_Distribution", "Heating_Load", "Cooling_Load"])
columnas_continuas = set(["Relative_Compactness", "Surface_Area", "Wall_Area", "Cooling_Load"])
cols = list(columnas - columnas_continuas)
Data_Final = pd.concat([scaled_data, eficiencia_df[cols]], axis=1)

import matplotlib.pyplot as plt

#plt.figure(figsize=(18,9))
#scaled_data.boxplot()
fig , ax1 = plt.subplots(figsize=(10,6))
ax1.boxplot(scaled_data)
ax1.set_xticklabels(columnas_continuas, rotation=90)
plt.title("Variables númericas del dataset", fontsize=20)
plt.show()

"""**De acuerdo al resultado de la gráfica. No se encuentran valores atípicos**


"""

Q1 = scaled_data.quantile(0.25)
Q3 = scaled_data.quantile(0.75)
IQR = Q3 - Q1

datos_tipicos = scaled_data[~((scaled_data < (Q1 - 1.5 * IQR)) |(scaled_data > (Q3 + 1.5 * IQR))).any(axis=1)]
datos_tipicos.shape

"""**De acuerdo con el análisis del rango intercuartil, no se encuentran datos atípicos**

##Relación entre Variables
"""

import seaborn as sns
correlation_matrix = variables_continuas.corr()

plt.figure(figsize=(10, 10))
sns.heatmap(correlation_matrix, annot=True, cmap='coolwarm', fmt=".2f")
plt.show()

"""**Vemos que la correlación entre Heating Load y Cooling Load es muy fuerte. Así mismo, la correlación entre Surface Area y Relative Compactness también es muy fuerte, pero en este caso es inversa. La correlación de Surafce Area tanto con Heating Load como con Cooling Load es fuerte e inversa. En general se observa también que las variables Heating Load y Cooling Load tienen una correlación muy similar con las demás variables.**"""

sns.pairplot(variables_continuas)

"""**Con las gráficas para el análisis bivariante, podemos ver cómo se comportan los datos en relación a los demás. Se corrobora que solo las variables Heating Load y Cooling Load, tienen valores continuios y una correlación fuerte. Las demás variables tienen valores discretos que no aplican para el análisis, por lo tanto se toman como variables categoricas.
 Vemos que tanto las variables Heating Load como Cooling Load tienen una distribución bimodal.**
"""